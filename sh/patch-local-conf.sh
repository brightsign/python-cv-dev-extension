#!/bin/bash

# Script to patch local.conf for RKNN toolkit integration
# This script adds RKNN-specific configurations to the BrightSign OE local.conf

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

# Default paths
BRIGHTSIGN_OE_DIR="${BRIGHTSIGN_OE_DIR:-${PROJECT_ROOT}/brightsign-oe}"
LOCAL_CONF_PATH="${BRIGHTSIGN_OE_DIR}/build/conf/local.conf"
BACKUP_SUFFIX=".rknn-backup-$(date +%Y%m%d-%H%M%S)"

usage() {
    echo "Usage: $0 [OPTIONS]"
    echo "Patch local.conf to include RKNN toolkit configuration"
    echo ""
    echo "Options:"
    echo "  -c, --conf PATH     Path to local.conf file (default: ${LOCAL_CONF_PATH})"
    echo "  -d, --dry-run       Show what would be added without making changes"
    echo "  -y, --yes           Automatically confirm changes (non-interactive mode)"
    echo "  -h, --help          Show this help message"
    echo ""
    echo "Environment variables:"
    echo "  BRIGHTSIGN_OE_DIR   Override BrightSign OE directory path"
    echo ""
    echo "Note: The script automatically detects piped input and enables auto-confirmation"
}

# Parse command line arguments
DRY_RUN=false
AUTO_CONFIRM=false

# Check if stdin is being piped (non-interactive)
if [[ ! -t 0 ]]; then
    AUTO_CONFIRM=true
fi

while [[ $# -gt 0 ]]; do
    case $1 in
        -c|--conf)
            LOCAL_CONF_PATH="$2"
            shift 2
            ;;
        -d|--dry-run)
            DRY_RUN=true
            shift
            ;;
        -y|--yes)
            AUTO_CONFIRM=true
            shift
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            usage
            exit 1
            ;;
    esac
done

# Update paths if BRIGHTSIGN_OE_DIR is set
if [[ -n "${BRIGHTSIGN_OE_DIR}" ]]; then
    LOCAL_CONF_PATH="${BRIGHTSIGN_OE_DIR}/build/conf/local.conf"
fi

echo "RKNN Local.conf Patcher"
echo "======================="
echo "Target file: ${LOCAL_CONF_PATH}"
echo "Dry run: ${DRY_RUN}"
echo ""

# Create build directory and local.conf if they don't exist
LOCAL_CONF_DIR="$(dirname "${LOCAL_CONF_PATH}")"
if [[ ! -d "${LOCAL_CONF_DIR}" ]]; then
    echo "Creating build configuration directory: ${LOCAL_CONF_DIR}"
    mkdir -p "${LOCAL_CONF_DIR}"
fi

if [[ ! -f "${LOCAL_CONF_PATH}" ]]; then
    echo "local.conf not found, creating basic configuration file..."
    if [[ ! -w "${LOCAL_CONF_DIR}" ]]; then
        echo "Error: Cannot write to directory ${LOCAL_CONF_DIR}. Check permissions." >&2
        exit 1
    fi
    cat > "${LOCAL_CONF_PATH}" << 'EOF'
#
# Local configuration for BrightSign OE build
# Auto-generated by patch-local-conf.sh
#
MACHINE ??= "cobra"
DISTRO ??= "poky"
PACKAGE_CLASSES ?= "package_rpm"

# Build optimization
BB_NUMBER_THREADS ?= "${@oe.utils.cpu_count()}"
PARALLEL_MAKE ?= "-j ${@oe.utils.cpu_count()}"

# Download directory
DL_DIR ?= "${TOPDIR}/../downloads"
SSTATE_DIR ?= "${TOPDIR}/../sstate-cache"

# Additional space for development
IMAGE_ROOTFS_EXTRA_SPACE = "524288"
EOF
fi

# Configuration to add
RKNN_CONFIG=$(cat << 'EOF'

#
# RKNN Toolkit Configuration
# Added by patch-local-conf.sh
#
# Python version preferences for RKNN compatibility
PREFERRED_VERSION_python3 = "3.8%"
PREFERRED_VERSION_python3-numpy = "1.17%"
PREFERRED_VERSION_python3-opencv = "4.5%"

# RKNN package preferences
PREFERRED_VERSION_python3-rknn-toolkit2 = "2.3.2"

# Machine features for NPU support
MACHINE_FEATURES_append = " rknn-npu"

# Image install packages for RKNN runtime and development
IMAGE_INSTALL_append = " packagegroup-rknn-runtime packagegroup-rknn-dev"

# Download directory for RKNN wheels (optional optimization)
# DL_DIR ?= "${TOPDIR}/../downloads-rknn"

# Build optimization for RKNN packages
PARALLEL_MAKE_pn-python3-rknn-toolkit2 = "-j 1"

EOF
)

# Check if RKNN configuration already exists
if grep -q "# RKNN Toolkit Configuration" "${LOCAL_CONF_PATH}"; then
    echo "RKNN configuration already exists in local.conf"
    echo "Configuration appears to be already applied."
    echo "✓ RKNN configuration is up to date"
    exit 0
fi

# Show what will be added
echo "The following configuration will be added to local.conf:"
echo "--------------------------------------------------------"
echo "${RKNN_CONFIG}"
echo "--------------------------------------------------------"
echo ""

if [[ "${DRY_RUN}" == "true" ]]; then
    echo "DRY RUN: No changes made to ${LOCAL_CONF_PATH}"
    exit 0
fi

# Prompt for confirmation
if [[ "${AUTO_CONFIRM}" == "true" ]]; then
    echo "Auto-confirming changes (non-interactive mode or -y flag used)"
    REPLY="y"
else
    read -p "Apply these changes to ${LOCAL_CONF_PATH}? [y/N] " -n 1 -r
    echo
fi

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Operation cancelled."
    exit 0
fi

# Create backup
echo "Creating backup: ${LOCAL_CONF_PATH}${BACKUP_SUFFIX}"
cp "${LOCAL_CONF_PATH}" "${LOCAL_CONF_PATH}${BACKUP_SUFFIX}"

# Apply the patch
echo "Applying RKNN configuration to local.conf..."
echo "${RKNN_CONFIG}" >> "${LOCAL_CONF_PATH}"

echo ""
echo "✓ Successfully patched local.conf"
echo "✓ Backup created: ${LOCAL_CONF_PATH}${BACKUP_SUFFIX}"
echo ""
echo "Next steps:"
echo "1. Build the SDK: cd ${BRIGHTSIGN_OE_DIR}/build && MACHINE=cobra ./bsbb brightsign-sdk"
echo "2. Or build specific RKNN packages: ./bsbb python3-rknn-toolkit2"
echo ""
echo "RKNN development and runtime packages are now included in the SDK."
echo "Both packagegroup-rknn-runtime and packagegroup-rknn-dev are enabled."

# return success
exit 0