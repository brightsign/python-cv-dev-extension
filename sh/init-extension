#!/bin/bash
# Extension initialization script
# Called by bsext_init during start

SCRIPT_DIR=$(dirname $(realpath $0))
EXTENSION_HOME=$(dirname ${SCRIPT_DIR})

echo "Initializing Python Development Extension..."

# Source the Python environment setup
if [ -f "${SCRIPT_DIR}/setup_python_env" ]; then
    # Source the environment setup (no cd needed - script is path-independent)
    source "${SCRIPT_DIR}/setup_python_env"
else
    echo "Error: setup_python_env not found at ${SCRIPT_DIR}/setup_python_env"
    exit 1
fi

# Setup RKNN runtime library symlink for patched binaries
# RKNN binaries have been patched to look for /tmp/lib/librknnrt.so (same length as original path)
EXTENSION_LIB="${EXTENSION_HOME}/usr/lib/librknnrt.so"
SYSTEM_LIB="/tmp/lib/librknnrt.so"

if [ -f "$EXTENSION_LIB" ]; then
    echo "Setting up RKNN runtime library..."
    # Ensure /tmp/lib directory exists (always writable)
    mkdir -p "/tmp/lib" 2>/dev/null || true
    
    if [ ! -e "$SYSTEM_LIB" ]; then
        echo "  Creating symlink: $SYSTEM_LIB -> $EXTENSION_LIB"
        if ln -sf "$EXTENSION_LIB" "$SYSTEM_LIB" 2>/dev/null; then
            echo "  ✅ RKNN runtime library linked (patched binaries will find it)"
        else
            echo "  ⚠️  Warning: Failed to create symlink"
            logger -t "bsext-pydev" "Failed to create librknnrt.so symlink"
        fi
    else
        echo "  ✅ RKNN runtime library already linked at $SYSTEM_LIB"
    fi
else
    echo "⚠️  Warning: Extension librknnrt.so not found at $EXTENSION_LIB"
    logger -t "bsext-pydev" "RKNN runtime library not found"
fi

# Verify rknn-toolkit-lite2 package is available
if python3 -c "import rknnlite" 2>/dev/null; then
    echo "✅ RKNN toolkit package is available"
else
    echo "⚠️  Warning: RKNN toolkit package not found in site-packages"
    logger -t "bsext-pydev" "RKNN toolkit package not available"
fi

# Run user initialization if configured
if [ -x "${SCRIPT_DIR}/run-user-init" ]; then
    echo "Running user initialization..."
    if "${SCRIPT_DIR}/run-user-init"; then
        echo "  User initialization completed"
    else
        echo "  Warning: User initialization had errors (extension continues)"
        logger -t "bsext-pydev" "User initialization failed but extension continues"
    fi
else
    echo "User initialization script not found or not executable, skipping"
fi

echo "Python Development Extension initialized successfully"
exit 0